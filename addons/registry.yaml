apiVersion: v1
kind: ReplicationController
metadata:
  name: registry
  namespace: kube-system
  labels:
    k8s-app: registry
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  selector:
    k8s-app: registry
  template:
    metadata:
      labels:
        k8s-app: registry
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - name: registry
        image: kubernetesonarm/registry
        imagePullPolicy: IfNotPresent
        args:
        - /etc/docker/registry/config.yml
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
        volumeMounts:
        - name: registry-data
          mountPath: /var/lib/registry
        ports:
        - containerPort: 5000
          name: registry
          protocol: TCP
      volumes:
      - name: registry-data
        hostPath:
          path: /var/lib/registry
---
apiVersion: v1
kind: Service
metadata:
  name: kube-registry
  namespace: kube-system
  labels:
    k8s-app: kube-registry
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "KubeRegistry"
spec:
  selector:
    k8s-app: kube-registry
  ports:
  - name: registry
    port: 5000
    protocol: TCP
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-registry-proxy
  namespace: kube-system
spec:
  containers:
  - name: kube-registry-proxy
    image: kubernetesonarm/kube-registry-proxy-arm:0.4
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
    env:
    - name: REGISTRY_HOST
      value: kube-registry.kube-system.svc.cluster.local
    - name: REGISTRY_PORT
      value: "5000"
    - name: FORWARD_PORT
      value: "5000"
    ports:
    - name: registry
      containerPort: 5000
      hostPort: 5000
